// Code generated by entc, DO NOT EDIT.

package ent

import "context"

func (c *Customer) Orders(ctx context.Context) ([]*Order, error) {
	result, err := c.Edges.OrdersOrErr()
	if IsNotLoaded(err) {
		result, err = c.QueryOrders().All(ctx)
	}
	return result, err
}

func (o *Order) Customer(ctx context.Context) (*Customer, error) {
	result, err := o.Edges.CustomerOrErr()
	if IsNotLoaded(err) {
		result, err = o.QueryCustomer().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (o *Order) Items(ctx context.Context) ([]*OrderItem, error) {
	result, err := o.Edges.ItemsOrErr()
	if IsNotLoaded(err) {
		result, err = o.QueryItems().All(ctx)
	}
	return result, err
}

func (oi *OrderItem) Order(ctx context.Context) (*Order, error) {
	result, err := oi.Edges.OrderOrErr()
	if IsNotLoaded(err) {
		result, err = oi.QueryOrder().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (oi *OrderItem) Product(ctx context.Context) (*Product, error) {
	result, err := oi.Edges.ProductOrErr()
	if IsNotLoaded(err) {
		result, err = oi.QueryProduct().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (pr *Product) OrderItems(ctx context.Context) ([]*OrderItem, error) {
	result, err := pr.Edges.OrderItemsOrErr()
	if IsNotLoaded(err) {
		result, err = pr.QueryOrderItems().All(ctx)
	}
	return result, err
}
